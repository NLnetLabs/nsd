# #-- zonec_tests.test --#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test
. ../common.sh
get_random_port 1

# start NSD
PRE="../.."
NSD="$PRE/nsd"

# multiple includes - should 'just work' #76 and also bug 078
$NSD -c zonec_tests.conf -p $RND_PORT
wait_nsd_up nsd.log
if dig @127.0.0.1 -p $RND_PORT miek.nl SOA | grep NOERROR; then
	echo OK zonec worked.
else
	cat nsd.log
	echo "zonec failed"
	kill_from_pidfile nsd.pid
	exit 1
fi
cat nsd.log
if grep error nsd.log; then
	echo "zonec failed"
	kill_from_pidfile nsd.pid
	exit 1
fi
echo OK
kill_from_pidfile nsd.pid
rm nsd.log

# test 2
$NSD -c zonec_tests.conf2 -p $RND_PORT
if dig @127.0.0.1 -p $RND_PORT miek.nl SOA | grep NOERROR; then
	cat out
	echo "zonec worked, but had to fail"
	kill_from_pidfile nsd.pid
	exit 1
fi
cat nsd.log
if grep "read with 2 errors" nsd.log && \
	grep "zonec_tests.fail:3: only class IN is supported" nsd.log &&
	grep "zonec_tests.fail:4: Invalid ttl in $TTL" nsd.log; then
	echo "errors checked ok"
else
	echo "bad errors"
	kill_from_pidfile nsd.pid
	exit 1
fi
kill_from_pidfile nsd.pid
rm nsd.log

# test 3
$NSD -c zonec_tests.conf3 -p $RND_PORT
if dig @127.0.0.1 -p $RND_PORT miek.nl SOA | grep NOERROR; then
	cat nsd.log
	echo "zonec worked, but had to fail"
	kill_from_pidfile nsd.pid
	exit 1
fi
cat nsd.log
if grep "read with 1 errors" nsd.log && \
	grep "zonec_tests.offbyone:13: Invalid OWNER in RR" nsd.log; then
	echo "errors checked ok"
else
	echo "bad errors"
	kill_from_pidfile nsd.pid
	exit 1
fi
kill_from_pidfile nsd.pid
rm nsd.log

exit 0
