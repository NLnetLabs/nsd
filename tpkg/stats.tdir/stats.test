# #-- stats.test --#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test
. ../common.sh

PRE="../.."
# are stats enabled?
if grep "define BIND8_STATS" $PRE/config.h; then
	echo "BIND8_STATS enabled, do test"
else
	echo "BIND8_STATS not enabled, skip test"
	exit 0
fi

# send a couple of queries
dig @127.0.0.1 -p $TPKG_PORT www.example.com A | tee result
if grep "192.0.2.1" result; then
	echo "OK"
else
	echo "zone not present"
	cat nsd.log
	exit 1
fi

dig @127.0.0.1 -p $TPKG_PORT www.example.com A | tee result
if grep "192.0.2.1" result; then
	echo "OK"
else
	echo "zone not present"
	cat nsd.log
	exit 1
fi

dig @127.0.0.1 -p $TPKG_PORT www.example.com A | tee result
if grep "192.0.2.1" result; then
	echo "OK"
else
	echo "zone not present"
	cat nsd.log
	exit 1
fi

dig @127.0.0.1 -p $TPKG_PORT www.example.com TXT | tee result
if grep "SOA" result; then
	echo "OK"
else
	echo "zone not present"
	cat nsd.log
	exit 1
fi

dig @127.0.0.1 -p $TPKG_PORT www.example.com TXT | tee result
if grep "SOA" result; then
	echo "OK"
else
	echo "zone not present"
	cat nsd.log
	exit 1
fi

dig @127.0.0.1 -p $TPKG_PORT foo.example.net AAAA | tee result
if grep "NXDOMAIN" result; then
	echo "OK"
else
	echo "zone not present"
	cat nsd.log
	exit 1
fi

dig @127.0.0.1 -p $TPKG_PORT www.example.nl MX | tee result
if grep "REFUSED" result; then
	echo "OK"
else
	echo "incorrect reply"
	cat nsd.log
	exit 1
fi

# fetch and check statistics
$PRE/nsd-control -c nsd_1.conf stats | tee stats
echo ""
echo "> check stats"
if grep "num.queries=7" stats; then echo "OK num.queries"; else echo "FAIL"; exit 1; fi
if grep "num.type.A=3" stats; then echo "OK num.type.A"; else echo "FAIL"; exit 1; fi
if grep "num.type.TXT=2" stats; then echo "OK num.type.TXT"; else echo "FAIL"; exit 1; fi
if grep "num.type.AAAA=1" stats; then echo "OK num.type.AAAA"; else echo "FAIL"; exit 1; fi
if grep "num.rcode.NOERROR=5" stats; then echo "OK num.rcode.NOERROR"; else echo "FAIL"; exit 1; fi
if grep "num.rcode.NXDOMAIN=1" stats; then echo "OK num.rcode.NXDOMAIN"; else echo "FAIL"; exit 1; fi
if grep "num.opcode.QUERY=7" stats; then echo "OK num.opcode.QUERY"; else echo "FAIL"; exit 1; fi
if grep "num.class.IN=7" stats; then echo "OK num.class.IN"; else echo "FAIL"; exit 1; fi
if grep "zone.master=2" stats; then echo "OK zone.master"; else echo "FAIL"; exit 1; fi

# check that server is still up
dig @127.0.0.1 -p $TPKG_PORT www.example.com A | tee result
if grep "192.0.2.1" result; then
	echo "OK"
else
	echo "zone not present"
	cat nsd.log
	exit 1
fi

echo ""
cat nsd.log

exit 0
