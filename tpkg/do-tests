#!/bin/bash
. ./common.sh
quiet=0
if test "$1" = "-q"; then
	quiet=1
	tdirarg="-q"
	shift
fi

# you need to have the following tools in your $PATH:
# export PATH=$PATH:/usr/local/bin
# basic: grep, grep, tail, head, cp, rm, kill ...
# dig   - version 9 or later.
# wdiff
# tdir
# pcat, pcat-diff, pcat-print, ldns-testns
# nc and printf for tcp_* tests.
test_tool_avail "grep"
test_tool_avail "tail"
test_tool_avail "head"
test_tool_avail "kill"
test_tool_avail "dig"
test_tool_avail "wdiff"
test_tool_avail "tdir"
test_tool_avail "drill"
# better with pcat, pcat-diff and pcat-print
test_tool_avail "ldns-testns"
test_tool_avail "ldns-notify"
test_tool_avail "streamtcp"

NEED_DIG9="bug009_soa_alone bug013_truncate bug034_any bug052_ent bug054_rd bug056_axfr bug058_qn_246 bug072_parent bug090_000_txt bug095_screwy_wc bug103_nx_soa_ttl copy_cd nx_dnssec tsig_badkey tsig_badsig tsig_query socket_partitioning"
NEED_DRILL171="qname_offbyone"
NEED_LSOF="socket_partitioning"
NEED_i386="xfr_1 xfr_2"
NEED_NC="tcp_underrun"
NEED_PCAT="query_diff_root"
NEED_CPU_AFFINITY="bad_cpu_affinity no_cpu_affinity cpu_affinity"
NEED_FAKETIME="dnscookies"

# do we have dig9?
DIG9=no
if dig 2>&1 | grep "DiG 9" >/dev/null; then DIG9=yes; fi
DRILL171=no
if test `drill -v | head -1 | awk '{print $3}' | awk -F. '{printf("%d%d%.2d", $1, $2, $3)}'` -le 1701 ; then DRILL171=yes; fi
LSOF=no
if lsof -v 2>&1 | grep "revision" >/dev/null; then LSOF=yes; fi
# do we have nc?
HAVE_NC=no
if test -f "`which nc 2>&1`"; then HAVE_NC=yes; fi
# do we have ldns pcat, pcat-print, pcat-diff?
HAVE_PCAT=no
if test -f "`which pcat-diff 2>&1`"; then HAVE_PCAT=yes; fi
CPU_AFFINITY=no
if [ -n "$(cpu_count)" ] && [ "$(cpu_count)" -gt 1 ]; then CPU_AFFINITY=yes; fi
HAVE_FAKETIME=no
if test -f "`which faketime 2>&1`"; then HAVE_FAKETIME=yes; fi

# run the tests
tdir -a ../../ $tdirarg fake 0000_nsd-compile.tdir
tdir -a ../../ $tdirarg fake 0001_nsd-debug-comp.tdir
for i in *.tdir; do
	skip=no
	if [ $DIG9 = no ] && echo $NEED_DIG9 | grep `basename $i .tdir` >/dev/null; then
		echo ">>> skipped $i: test needs dig 9 or later"
		skip=yes
	fi
	if [ $DRILL171 = no ] && echo $NEED_DRILL171 | grep `basename $i .tdir` >/dev/null; then
		echo ">>> skipped $i: test needs drill 1.7.1 or earlier"
		skip=yes
	fi
	if [ $LSOF = no ] && echo $NEED_LSOF | grep `basename $i .tdir` >/dev/null; then
		echo ">>> skipped $i: test needs lsof"
		skip=yes
	fi
	if [ $HOSTTYPE != i386 ] && [ $HOSTTYPE != x86_64 ] && echo $NEED_i386 | grep `basename $i .tdir` >/dev/null; then
		echo ">>> skipped $i: test needs i386 (precompiled help prog)"
		skip=yes
	fi
	if [ $HAVE_NC = no ] && echo $NEED_NC | grep `basename $i .tdir` >/dev/null; then
		echo ">>> skipped $i: test needs nc (netcat)"
		skip=yes
	fi
	if [ $HAVE_PCAT = no ] && echo $NEED_PCAT | grep `basename $i .tdir` >/dev/null; then
		echo ">>> skipped $i: test needs pcat, pcat-print, pcat-diff."
		skip=yes
	fi
	if [ $CPU_AFFINITY = no ] && echo $NEED_CPU_AFFINITY | grep `basename $i .tdir` >/dev/null; then
		echo ">>> skipped $i: test needs cpu affinity and more than one cpu"
		skip=yes
	fi
	if [ $HAVE_FAKETIME = no ] && echo $NEED_FAKETIME | grep `basename $i .tdir` >/dev/null; then
		echo ">>> skipped $i: test needs faketime"
		skip=yes
	fi
	if [ $skip = no ]; then
		if test "$quiet" = "1"; then echo $i; else
			echo ">>> next test $i at "`date`; fi
		tdir -a ../../ $tdirarg exe $i
	fi
done
tdir $tdirarg report
#tdir clean

do_long=yes
if [ $do_long = yes ]; then
	LONGTESTS="testplan_axfr testplan_ixfr_pkts testplan_mess testplan_axfr_tsig testplan_ixfr_remove testplan_timeout testplan_deadlock testplan_ixfr testplan_tsig_34 ixfr_rollback reload_timeout xfrd_connect_ip6 xfrd_tcp_overload notify_interrupts_axfr bug137_compile_outdir bug145_multiple_zone_xfr ixfr_malformed ixfr_remove_unknown socket10kxfr"
	cd long
	for i in $LONGTESTS; do
		if test "$quiet" = "1"; then echo $i; else
			echo ">>> next test $i at "`date`; fi
		tdir -a ../../ $tdirarg exe $i
	done
	tdir $tdirarg report
	#tdir clean
	cd ..
fi
